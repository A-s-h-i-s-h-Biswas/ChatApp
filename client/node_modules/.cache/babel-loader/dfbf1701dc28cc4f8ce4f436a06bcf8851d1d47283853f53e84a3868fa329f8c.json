{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASHISH\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\Components\\\\PrivateChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\n// import { useParams } from 'react-router-dom';\nimport ChatBar from \"./ChatBar\";\nimport ChatBody from \"./ChatBody\";\nimport ChatFooter from \"./ChatFooter\";\nimport ChatHeader from \"./ChatHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateChat = ({\n  socket\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [active, setActive] = useState(false);\n  const [roomer, setRoomer] = useState(null);\n  const lastMessageRef = useRef();\n  // const params=useParams();\n  // const id=params.id;\n  useEffect(() => {\n    socket.on(\"messageResponse\", data => setMessages([...messages, data]));\n  }, [socket, messages]);\n  useEffect(() => {\n    var _lastMessageRef$curre;\n    // scroll to bottom for every text\n    (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const roomerSetter = data => {\n    setRoomer(data);\n  };\n  const activeSetter = () => {\n    setActive(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-950 text-white min-h-screen flex justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" bg-slate-800 w-[29.5%] md:w-[300px]\",\n      children: /*#__PURE__*/_jsxDEV(ChatBar, {\n        socket: socket,\n        roomerSetter: roomerSetter,\n        activeSetter: activeSetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"bg-slate-900 w-[70%] md:w-[calc(100%-304px)]\",\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        name: \"private chat\",\n        roomer: roomer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBody, {\n        active: active,\n        messages: messages,\n        lastMessageRef: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n        socket: socket,\n        active: active,\n        roomer: roomer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateChat, \"T3S8HK3+0R/BMICUUV8ez/uzH/U=\");\n_c = PrivateChat;\nexport default PrivateChat;\nvar _c;\n$RefreshReg$(_c, \"PrivateChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatBar","ChatBody","ChatFooter","ChatHeader","jsxDEV","_jsxDEV","PrivateChat","socket","_s","messages","setMessages","active","setActive","roomer","setRoomer","lastMessageRef","on","data","_lastMessageRef$curre","current","scrollIntoView","behavior","roomerSetter","activeSetter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/ASHISH/Desktop/chat-app/client/src/Components/PrivateChat.js"],"sourcesContent":["import React, { useState, useEffect,useRef } from \"react\";\r\n// import { useParams } from 'react-router-dom';\r\nimport ChatBar from \"./ChatBar\";\r\nimport ChatBody from \"./ChatBody\";\r\nimport ChatFooter from \"./ChatFooter\";\r\nimport ChatHeader from \"./ChatHeader\";\r\n\r\nconst PrivateChat = ({ socket }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [active, setActive] = useState(false);\r\n  const [roomer, setRoomer] = useState(null);\r\n  const lastMessageRef=useRef();\r\n  // const params=useParams();\r\n  // const id=params.id;\r\n  useEffect(() => {\r\n    socket.on(\"messageResponse\", (data) => setMessages([...messages, data]));\r\n  },[socket, messages]);\r\n\r\n  useEffect(()=>{\r\n    // scroll to bottom for every text\r\n    lastMessageRef.current?.scrollIntoView({behavior:\"smooth\"});\r\n},[messages]);\r\n\r\n  const roomerSetter = (data) => {\r\n    setRoomer(data);\r\n  };\r\n  const activeSetter = () => {\r\n    setActive(true);\r\n  };\r\n  return (\r\n    <div className=\"bg-gray-950 text-white min-h-screen flex justify-between\">\r\n      <div className=\" bg-slate-800 w-[29.5%] md:w-[300px]\">\r\n        <ChatBar\r\n          socket={socket}\r\n          roomerSetter={roomerSetter}\r\n          activeSetter={activeSetter}\r\n        />\r\n      </div>\r\n      <main className=\"bg-slate-900 w-[70%] md:w-[calc(100%-304px)]\">\r\n        <ChatHeader name={\"private chat\"} roomer={roomer} />\r\n        <ChatBody active={active} messages={messages} lastMessageRef/>\r\n        <ChatFooter socket={socket} active={active} roomer={roomer} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}